@page "/Sales"
@using StkMS.Library.Contracts
@using StkMS.ViewModels
@using StkMS.Contracts
@using BlazorBarcodeScanner.ZXing.JS

@inject IStock stock
@inject IMapper mapper

<h3>Sales</h3>

<BlazorBarcodeScanner.ZXing.JS.BarcodeReader Title=" "
                                             StartCameraAutomatically="true"
                                             ShowStart="false"
                                             ShowReset="false"
                                             ShowVideoDeviceList="false"
                                             VideoWidth="300"
                                             VideoHeigth="200"/>

<div class="row">
    <div class="col-xs-12 col-sm-8 col-lg-4 col-xl-2">
        <EditForm Model="@salesViewModel" OnValidSubmit="@AddSale">
            <DataAnnotationsValidator/>
            <ValidationSummary/>

            <div class="form-group">
                <label for="productCode">Product Code</label>
                <InputText id="productCode" @bind-Value="productCode" class="form-control" @onblur="LookUpProductAsync"/>
            </div>

            <div class="form-group">
                <label for="productName">Product Name</label>
                <InputText id="productName" @bind-Value="salesViewModel.Name" class="form-control" disabled="true"/>
            </div>

            <div class="form-group">
                <label for="productUnit">Unit</label>
                <InputText id="productUnit" @bind-Value="salesViewModel.Unit" class="form-control" disabled="true"/>
            </div>

            <div class="form-group">
                <label for="productUnitPrice">Unit Price</label>
                <InputNumber id="productUnitPrice" @bind-Value="@salesViewModel.UnitPrice" class="form-control" disabled="true"/>
            </div>

            <div class="form-group">
                <label for="productQuantity">Quantity</label>
                <InputNumber id="productQuantity" @bind-Value="salesViewModel.Quantity" class="form-control"/>
            </div>

            <div class="row">
                <div class="col">
                </div>
            </div>

            <div class="text-right">
                <RadzenButton ButtonType="ButtonType.Submit" Text="Add"/>
            </div>
        </EditForm>
    </div>
</div>


@code {
    private string productCode = "";

    private SalesViewModel salesViewModel = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync().ConfigureAwait(true);

        JsInteropClass.BarcodeReceived += LocalReceivedBarcodeTextAsync;
    }

    private async void LocalReceivedBarcodeTextAsync(BarcodeReceivedEventArgs args)
    {
        await ProductScannedAsync(args.BarcodeText).ConfigureAwait(true);
        StateHasChanged();
    }

    private async Task ProductScannedAsync(string code)
    {
        productCode = code;

        var product = await stock.FindProductAsync(code).ConfigureAwait(true);
        salesViewModel = product == null ? SalesViewModel.CreateInvalid(code) : mapper.MapToSalesViewModel(product);
    }

    private async void LookUpProductAsync()
    {
        await ProductScannedAsync(productCode).ConfigureAwait(true);
    }

    private void AddSale()
    {
    //
    }

}
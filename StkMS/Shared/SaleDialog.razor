@using StkMS.ViewModels
@using StkMS.Contracts

@inject IReportGenerator reportGenerator
@inject IJSRuntime jsRuntime

<MudDialog>
    <DialogContent>
        <MudText>Bon Nr. @sale.Id din @sale.DateTime.ToString("U")</MudText>
        <MudTable Items="@sale.Items" Hover="true" Breakpoint="Breakpoint.Sm">
            <HeaderContent>
                <MudTh>Product Code</MudTh>
                <MudTh>Name</MudTh>
                <MudTh>Unit</MudTh>
                <MudTh>Unit Price</MudTh>
                <MudTh>Quantity</MudTh>
                <MudTh>Value</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Product Code">@context.Code</MudTd>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Unit">@context.Unit</MudTd>
                <MudTd DataLabel="Unit Price">@context.UnitPrice.ToString("F2")</MudTd>
                <MudTd DataLabel="Quantity">@context.Quantity.ToString("F2")</MudTd>
                <MudTd DataLabel="Value">@context.Value.ToString("F2")</MudTd>
            </RowTemplate>
        </MudTable>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" OnClick="GenerateInventoryAsync">Print</MudButton>
        <MudButton Color="Color.Primary" OnClick="Cancel">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public SaleDetailsViewModel sale { get; set; }

    void Cancel() => MudDialog.Cancel();

    private async void GenerateInventoryAsync()
    {
        var bytes = reportGenerator.GenerateSaleReport(sale);
        await jsRuntime.InvokeVoidAsync("BlazorDownloadFile", $"sale{sale.Id}.pdf", "application/octet-stream", bytes).ConfigureAwait(true);
    }
}
@using StkMS.ViewModels
@using StkMS.Contracts
@using StkMS.Library.Contracts
@using StkMS.Library.Models

@inject IReportGenerator reportGenerator
@inject IJSRuntime jsRuntime
@inject IApiClient apiClient
<MudDialog>
    <DialogContent>
        <div class="col-xl-6 mb-5">
            <RadzenDropDown Data="@customers" @bind-Value="@customer"  />
        </div>
       
        <MudText>Bon Nr. @sale.Id din @sale.FormatDateTime.ToString()</MudText>
        <MudTable Items="@sale.Items" Hover="true" Breakpoint="Breakpoint.Sm">
            <HeaderContent>
                <MudTh>Cod Produs</MudTh>
                <MudTh>Nume</MudTh>
                <MudTh>U.M</MudTh>
                <MudTh>Preț</MudTh>
                <MudTh>Cantitate</MudTh>
                <MudTh>Valoare</MudTh>

            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Cod Produs">@context.Code</MudTd>
                <MudTd DataLabel="Nume">@context.Name</MudTd>
                <MudTd DataLabel="U.M">@context.Unit</MudTd>
                <MudTd DataLabel="Preț">@context.UnitPrice.ToString("F2")</MudTd>
                <MudTd DataLabel="Cantitate">@context.Quantity.ToString("0.##")</MudTd>
                <MudTd DataLabel="Valoare">@context.Value.ToString("F2")</MudTd>
            </RowTemplate>
        </MudTable>
        <MudPaper Class="d-flex flex-row-reverse py-2 px-1">
            <MudText> Total Valoare @sale.TotalValue</MudText>
        </MudPaper>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" OnClick="GenerateSaleReportAsync">Generează</MudButton>
        <MudButton Color="Color.Primary" OnClick="Cancel">Înapoi</MudButton>
    </DialogActions>

</MudDialog>
@code
{ 
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    //IEnumerable<string>? dd;
    List<Customer>? customers;

    Customer customer = new Customer();

    [Parameter]
    public SaleDetailsViewModel sale { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync().ConfigureAwait(true);

        customers = (await apiClient.GetAllCustomerAsync().ConfigureAwait(true)).ToList();
        customers.Insert(0, new Customer());
        //dd = customers.Select(it => it.Name);
    }

    void Cancel() => MudDialog.Cancel();

    private async void GenerateSaleReportAsync()
    {
        var bytes = reportGenerator.GenerateSaleReport(sale, customer);
        await jsRuntime.InvokeVoidAsync("BlazorDownloadFile", $"sale{sale.Id}.pdf", "application/octet-stream", bytes).ConfigureAwait(true);
    }
}
